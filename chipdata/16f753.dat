'GCBASIC/GCGB Chip Data File
'Chip: 16F753
'Main Format last revised:   14/07/2017
'Header Format last revised: 22/05/2021

[ChipData]
';All items in the ChipData section are available to user programs as constants
';The constants have the prefix of Chip: See the examples below

'This constant is exposed as ChipWORDS
Prog=2048

'This constant is exposed as ChipEEPROM
EEPROM=0

'This constant is exposed as ChipRAM
RAM=128

'This constant is exposed as ChipIO
I/O=11

'This constant is exposed as ChipADC
ADC=8

'This constant is exposed as ChipMhz
MaxMHz=20

'This constant is exposed with only the first parameter (if more than one)
IntOsc=8, 4, 2, 1, 0.5, 0.25, 0.125

'This constant is exposed as ChipPins
Pins=14

'This constant is exposed as ChipFamily
Family=14

'This constant is exposed as ChipSubFamily
SubFamily=14000

'This constant is exposed as ChipConfWords
ConfigWords=1

'This constant is exposed as ChipPSP
PSP=0

'This constant is exposed as ChipUSART
USART=0

'This constant is exposed as ChipMaxAddress
MaxAddress=511

';Microcontroller specific configuration Constants used in specific libraries, compiler or user programs
';This section of constants is specific to a microcontroller, so the constants may not be present for all microcontrollers

'ChipStacks constant can be used in user programs and provides the available stack depth
Stacks=8

'ChipUserIDAddress constant is used in user programs and provides the User ID address
UserIDAddress=8192

'ChipUserIDLength constant is used in user programs to provide the length of the UserID (in words)
UserIDLength=4

'WriteFlashBlocksize constant is used in user programs that write to flash memory in bytes
WriteFlashBlockSize=4

'EraseFlashBlockSize constant is used in user programs that write to flash memory in bytes
EraseFlashBlockSize=16

'ChipSelfWrite constant is used within the compiler to indicate the chip is self write capable
SelfWrite=1

[Interrupts]
'For specific details of the interrupts see the microcontroller datasheet
'The first parameter is the Great Cow BASIC identifier used in user code to expose the specific interrupt
ADCReady:ADIE,ADIF
CCP1:CCP1IE,CCP1IF
COG:COG1IE,COG1IF
Comp1Change:C1IE,C1IF
Comp2Change:C2IE,C2IF
ExtInt0:INTE,INTF
HardwareLimitTimer:HLTMR1IE,HLTMR1IF
HardwareLimitTimer2:HLTMR2IE,HLTMR2IF
PORTAChange:IOCIE,IOCIF
PortChange:IOCIE,IOCIF
Timer0Overflow:T0IE,T0IF
Timer1Gate:TMR1GIE,TMR1GIF
Timer1Overflow:TMR1IE,TMR1IF
Timer2Match:TMR2IE,TMR2IF

[Registers]
'For specific details of the registers see the microcontroller datasheet
'The first parameter is the Great Cow BASIC register name used in user code to expose the specific register
INDF,0
TMR0,1
PCL,2
STATUS,3
FSR,4
PORTA,5
PORTC,7
IOCAF,8
IOCCF,9
PCLATH,10
INTCON,11
PIR1,12
PIR2,13
TMR1,15
TMR1L,15
TMR1H,16
T1CON,17
T1GCON,18
CCPR1,19
CCPR1L,19
CCPR1H,20
CCP1CON,21
ADRES,28
ADRESL,28
ADRESH,29
ADCON0,30
ADCON1,31
OPTION_REG,129
TRISA,133
TRISC,135
IOCAP,136
IOCCP,137
PIE1,140
PIE2,141
OSCCON,143
FVR1CON0,144
DAC1CON0,145
DAC1REFL,146
DAC1REFH,147
OPA1CON,150
OPA1CON0,150
C2CON0,155
CM2CON0,155
C2CON1,156
CM2CON1,156
C1CON0,157
CM1CON0,157
C1CON1,158
CM1CON1,158
CMOUT,159
MCOUT,159
LATA,261
LATC,263
IOCAN,264
IOCCN,265
WPUA,268
WPUC,269
SLRCONC,270
PCON,271
TMR2,272
PR2,273
T2CON,274
HLTMR1,275
HLTPR1,276
HLT1CON0,277
HLT1CON1,278
HLTMR2,279
HLTPR2,280
HLT2CON0,281
HLT2CON1,282
SLPC1CON0,286
SLPCCON0,286
SLPC1CON1,287
SLPCCON1,287
ANSELA,389
ANSELC,391
APFCON,392
OSCTUNE,393
PMCON1,396
PMCON2,397
PMADR,398
PMADRL,398
PMADRH,399
PMDAT,400
PMDATL,400
PMDATH,401
COG1PHR,402
COG1PHF,403
COG1BKR,404
COG1BKF,405
COG1DBR,406
COG1DBF,407
COG1CON0,408
COG1CON1,409
COG1RIS,410
COG1RSIM,411
COG1FIS,412
COG1FSIM,413
COG1ASD0,414
COG1ASD1,415

[Bits]
'For details of the bits (relative to a register in terms of registerbits) see the microcontroller datasheet
'The first parameter is the Great Cow BASIC bit name used in user code to expose the specific registerbit
TMR1IF,PIR1,0
TMR2IF,PIR1,1
HLTMR1IF,PIR1,2
HLTMR2IF,PIR1,3
ADIF,PIR1,6
TMR1GIF,PIR1,7
TMR1IE,PIE1,0
TMR2IE,PIE1,1
HLTMR1IE,PIE1,2
HLTMR2IE,PIE1,3
ADIE,PIE1,6
TMR1GIE,PIE1,7
DACOE,DAC1CON0,5
DACFM,DAC1CON0,6
DACEN,DAC1CON0,7
DACPSS0,DAC1CON0,2
DACPSS1,DAC1CON0,3
C1SYNC,C1CON0,0
C1HYS,C1CON0,1
C1SP,C1CON0,2
C1ZLF,C1CON0,3
C1POL,C1CON0,4
C1OE,C1CON0,5
C1OUT,C1CON0,6
C1ON,C1CON0,7
SC1INS,SLPC1CON0,0
SC1POL,SLPC1CON0,4
SC1MRPE,SLPC1CON0,5
SC1EN,SLPC1CON0,7
SCS1TSS0,SLPC1CON0,2
SCS1TSS1,SLPC1CON0,3
CM1CON0_C1SYNC,CM1CON0,0
CM1CON0_C1HYS,CM1CON0,1
CM1CON0_C1SP,CM1CON0,2
CM1CON0_C1ZLF,CM1CON0,3
CM1CON0_C1POL,CM1CON0,4
CM1CON0_C1OE,CM1CON0,5
CM1CON0_C1OUT,CM1CON0,6
CM1CON0_C1ON,CM1CON0,7
C1INTN,C1CON1,6
C1INTP,C1CON1,7
C1NCH0,C1CON1,0
C1NCH1,C1CON1,1
C1NCH2,C1CON1,2
C1PCH0,C1CON1,3
C1PCH1,C1CON1,4
C1PCH2,C1CON1,5
SC1RNG,SLPC1CON1,4
SC1ISET0,SLPC1CON1,0
SC1ISET1,SLPC1CON1,1
SC1ISET2,SLPC1CON1,2
SC1ISET3,SLPC1CON1,3
CM1CON1_C1INTN,CM1CON1,6
CM1CON1_C1INTP,CM1CON1,7
CM1CON1_C1NCH0,CM1CON1,0
CM1CON1_C1NCH1,CM1CON1,1
CM1CON1_C1NCH2,CM1CON1,2
CM1CON1_C1PCH0,CM1CON1,3
CM1CON1_C1PCH1,CM1CON1,4
CM1CON1_C1PCH2,CM1CON1,5
TMR1ON,T1CON,0
NOT_T1SYNC,T1CON,2
T1CKPS0,T1CON,4
T1CKPS1,T1CON,5
TMR1CS0,T1CON,6
TMR1CS1,T1CON,7
H1ON,HLT1CON0,2
H1CKPS0,HLT1CON0,0
H1CKPS1,HLT1CON0,1
H1OUTPS0,HLT1CON0,3
H1OUTPS1,HLT1CON0,4
H1OUTPS2,HLT1CON0,5
H1OUTPS3,HLT1CON0,6
H1REREN,HLT1CON1,0
H1FEREN,HLT1CON1,1
H1RES,HLT1CON1,6
H1FES,HLT1CON1,7
H1ERS0,HLT1CON1,2
H1ERS1,HLT1CON1,3
H1ERS2,HLT1CON1,4
C,STATUS,0
DC,STATUS,1
Z,STATUS,2
NOT_PD,STATUS,3
NOT_TO,STATUS,4
RP0,STATUS,5
RP1,STATUS,6
IRP,STATUS,7
RA0,PORTA,0
RA1,PORTA,1
RA2,PORTA,2
RA3,PORTA,3
RA4,PORTA,4
RA5,PORTA,5
RC0,PORTC,0
RC1,PORTC,1
RC2,PORTC,2
RC3,PORTC,3
RC4,PORTC,4
RC5,PORTC,5
IOCAF0,IOCAF,0
IOCAF1,IOCAF,1
IOCAF2,IOCAF,2
IOCAF3,IOCAF,3
IOCAF4,IOCAF,4
IOCAF5,IOCAF,5
IOCCF0,IOCCF,0
IOCCF1,IOCCF,1
IOCCF2,IOCCF,2
IOCCF3,IOCCF,3
IOCCF4,IOCCF,4
IOCCF5,IOCCF,5
IOCIF,INTCON,0
INTF,INTCON,1
T0IF,INTCON,2
IOCIE,INTCON,3
INTE,INTCON,4
T0IE,INTCON,5
PEIE,INTCON,6
GIE,INTCON,7
CCP1IF,PIR2,0
COG1IF,PIR2,2
C1IF,PIR2,4
C2IF,PIR2,5
T1GVAL,T1GCON,2
T1GGO_NOT_DONE,T1GCON,3
T1GSPM,T1GCON,4
T1GTM,T1GCON,5
T1GPOL,T1GCON,6
TMR1GE,T1GCON,7
T1GSS0,T1GCON,0
T1GSS1,T1GCON,1
T1GGO,T1GCON,3
CCP1M0,CCP1CON,0
CCP1M1,CCP1CON,1
CCP1M2,CCP1CON,2
CCP1M3,CCP1CON,3
DC1B0,CCP1CON,4
DC1B1,CCP1CON,5
ADON,ADCON0,0
GO_DONE,ADCON0,1
GO_NOT_DONE,ADCON0,1
ADFM,ADCON0,7
CHS0,ADCON0,2
CHS1,ADCON0,3
CHS2,ADCON0,4
CHS3,ADCON0,5
ADPREF1,ADCON1,0
ADCS0,ADCON1,4
ADCS1,ADCON1,5
ADCS2,ADCON1,6
PSA,OPTION_REG,3
T0SE,OPTION_REG,4
T0CS,OPTION_REG,5
INTEDG,OPTION_REG,6
NOT_RAPU,OPTION_REG,7
PS0,OPTION_REG,0
PS1,OPTION_REG,1
PS2,OPTION_REG,2
TRISA0,TRISA,0
TRISA1,TRISA,1
TRISA2,TRISA,2
TRISA3,TRISA,3
TRISA4,TRISA,4
TRISA5,TRISA,5
TRISC0,TRISC,0
TRISC1,TRISC,1
TRISC2,TRISC,2
TRISC3,TRISC,3
TRISC4,TRISC,4
TRISC5,TRISC,5
IOCAP0,IOCAP,0
IOCAP1,IOCAP,1
IOCAP2,IOCAP,2
IOCAP3,IOCAP,3
IOCAP4,IOCAP,4
IOCAP5,IOCAP,5
IOCCP0,IOCCP,0
IOCCP1,IOCCP,1
IOCCP2,IOCCP,2
IOCCP3,IOCCP,3
IOCCP4,IOCCP,4
IOCCP5,IOCCP,5
CCP1IE,PIE2,0
COG1IE,PIE2,2
C1IE,PIE2,4
C2IE,PIE2,5
LTS,OSCCON,1
HTS,OSCCON,2
IRCF0,OSCCON,4
IRCF1,OSCCON,5
FVRBUFEN,FVR1CON0,0
FVROE,FVR1CON0,5
FVRRDY,FVR1CON0,6
FVREN,FVR1CON0,7
FVRBUSS0,FVR1CON0,3
FVRBUSS1,FVR1CON0,4
OPAUGM,OPA1CON,4
OPAEN,OPA1CON,7
OPA1PCH0,OPA1CON,0
OPA1PCH1,OPA1CON,1
OPA1NCH0,OPA1CON,2
OPA1NCH1,OPA1CON,3
OPA1CON0_OPAUGM,OPA1CON0,4
OPA1CON0_OPAEN,OPA1CON0,7
OPA1CON0_OPA1PCH0,OPA1CON0,0
OPA1CON0_OPA1PCH1,OPA1CON0,1
OPA1CON0_OPA1NCH0,OPA1CON0,2
OPA1CON0_OPA1NCH1,OPA1CON0,3
C2SYNC,C2CON0,0
C2HYS,C2CON0,1
C2SP,C2CON0,2
C2ZLF,C2CON0,3
C2POL,C2CON0,4
C2OE,C2CON0,5
C2OUT,C2CON0,6
C2ON,C2CON0,7
CM2CON0_C2SYNC,CM2CON0,0
CM2CON0_C2HYS,CM2CON0,1
CM2CON0_C2SP,CM2CON0,2
CM2CON0_C2ZLF,CM2CON0,3
CM2CON0_C2POL,CM2CON0,4
CM2CON0_C2OE,CM2CON0,5
CM2CON0_C2OUT,CM2CON0,6
CM2CON0_C2ON,CM2CON0,7
C2INTN,C2CON1,6
C2INTP,C2CON1,7
C2NCH0,C2CON1,0
C2NCH1,C2CON1,1
C2NCH2,C2CON1,2
C2PCH0,C2CON1,3
C2PCH1,C2CON1,4
C2PCH2,C2CON1,5
CM2CON1_C2INTN,CM2CON1,6
CM2CON1_C2INTP,CM2CON1,7
CM2CON1_C2NCH0,CM2CON1,0
CM2CON1_C2NCH1,CM2CON1,1
CM2CON1_C2NCH2,CM2CON1,2
CM2CON1_C2PCH0,CM2CON1,3
CM2CON1_C2PCH1,CM2CON1,4
CM2CON1_C2PCH2,CM2CON1,5
MCOUT1,CMOUT,0
MCOUT2,CMOUT,1
MCOUT_MCOUT1,MCOUT,0
MCOUT_MCOUT2,MCOUT,1
LATA0,LATA,0
LATA1,LATA,1
LATA2,LATA,2
LATA4,LATA,4
LATA5,LATA,5
LATC0,LATC,0
LATC1,LATC,1
LATC2,LATC,2
LATC3,LATC,3
LATC4,LATC,4
LATC5,LATC,5
IOCAN0,IOCAN,0
IOCAN1,IOCAN,1
IOCAN2,IOCAN,2
IOCAN3,IOCAN,3
IOCAN4,IOCAN,4
IOCAN5,IOCAN,5
IOCCN0,IOCCN,0
IOCCN1,IOCCN,1
IOCCN2,IOCCN,2
IOCCN3,IOCCN,3
IOCCN4,IOCCN,4
IOCCN5,IOCCN,5
WPUA0,WPUA,0
WPUA1,WPUA,1
WPUA2,WPUA,2
WPUA3,WPUA,3
WPUA4,WPUA,4
WPUA5,WPUA,5
WPUC0,WPUC,0
WPUC1,WPUC,1
WPUC2,WPUC,2
WPUC3,WPUC,3
WPUC4,WPUC,4
WPUC5,WPUC,5
SLRC4,SLRCONC,4
SLRC5,SLRCONC,5
NOT_BOR,PCON,0
NOT_POR,PCON,1
TMR2ON,T2CON,2
T2CKPS0,T2CON,0
T2CKPS1,T2CON,1
T2OUTPS0,T2CON,3
T2OUTPS1,T2CON,4
T2OUTPS2,T2CON,5
T2OUTPS3,T2CON,6
H2ON,HLT2CON0,2
H2CKPS0,HLT2CON0,0
H2CKPS1,HLT2CON0,1
H2OUTPS0,HLT2CON0,3
H2OUTPS1,HLT2CON0,4
H2OUTPS2,HLT2CON0,5
H2OUTPS3,HLT2CON0,6
H2REREN,HLT2CON1,0
H2FEREN,HLT2CON1,1
H2RES,HLT2CON1,6
H2FES,HLT2CON1,7
H2ERS0,HLT2CON1,2
H2ERS1,HLT2CON1,3
H2ERS2,HLT2CON1,4
SLPCCON0_SC1INS,SLPCCON0,0
SLPCCON0_SC1POL,SLPCCON0,4
SLPCCON0_SC1MRPE,SLPCCON0,5
SLPCCON0_SC1EN,SLPCCON0,7
SLPCCON0_SCS1TSS0,SLPCCON0,2
SLPCCON0_SCS1TSS1,SLPCCON0,3
SLPCCON1_SC1RNG,SLPCCON1,4
SLPCCON1_SC1ISET0,SLPCCON1,0
SLPCCON1_SC1ISET1,SLPCCON1,1
SLPCCON1_SC1ISET2,SLPCCON1,2
SLPCCON1_SC1ISET3,SLPCCON1,3
ANSA0,ANSELA,0
ANSA1,ANSELA,1
ANSA2,ANSELA,2
ANSA4,ANSELA,4
ANSC0,ANSELC,0
ANSC1,ANSELC,1
ANSC2,ANSELC,2
ANSC3,ANSELC,3
T1GSEL,APFCON,4
TUN0,OSCTUNE,0
TUN1,OSCTUNE,1
TUN2,OSCTUNE,2
TUN3,OSCTUNE,3
TUN4,OSCTUNE,4
RD,PMCON1,0
WR,PMCON1,1
WREN,PMCON1,2
G1PHR0,COG1PHR,0
G1PHR1,COG1PHR,1
G1PHR2,COG1PHR,2
G1PHR3,COG1PHR,3
G1PHF0,COG1PHF,0
G1PHF1,COG1PHF,1
G1PHF2,COG1PHF,2
G1PHF3,COG1PHF,3
G1BKR0,COG1BKR,0
G1BKR1,COG1BKR,1
G1BKR2,COG1BKR,2
G1BKR3,COG1BKR,3
G1BKF0,COG1BKF,0
G1BKF1,COG1BKF,1
G1BKF2,COG1BKF,2
G1BKF3,COG1BKF,3
G1DBR0,COG1DBR,0
G1DBR1,COG1DBR,1
G1DBR2,COG1DBR,2
G1DBR3,COG1DBR,3
G1DBF0,COG1DBF,0
G1DBF1,COG1DBF,1
G1DBF2,COG1DBF,2
G1DBF3,COG1DBF,3
G1MD,COG1CON0,0
G1LD,COG1CON0,2
G1POL0,COG1CON0,3
G1POL1,COG1CON0,4
G1OE0,COG1CON0,5
G1OE1,COG1CON0,6
G1EN,COG1CON0,7
G1FDBTS,COG1CON1,6
G1RDBTS,COG1CON1,7
G1CS0,COG1CON1,0
G1CS1,COG1CON1,1
G1RIC1,COG1RIS,0
G1RIC2,COG1RIS,1
C1RICCP1,COG1RIS,2
G1RIFLT,COG1RIS,3
G1RIT2M,COG1RIS,4
G1R1HLT1,COG1RIS,5
G1RIHLT2,COG1RIS,6
G1RMC1,COG1RSIM,0
G1RMC2,COG1RSIM,1
G1RMCCP1,COG1RSIM,2
G1RMFLT,COG1RSIM,3
G1RTM2M,COG1RSIM,4
G1RMHLT1,COG1RSIM,5
G1RMHLT2,COG1RSIM,6
G1FIC1,COG1FIS,0
G1FIC2,COG1FIS,1
G1FICCP1,COG1FIS,2
G1FIFLT,COG1FIS,3
G1FIT2M,COG1FIS,4
G1FIHLT1,COG1FIS,5
G1FIHLT2,COG1FIS,6
G1FMC1,COG1FSIM,0
G1FMC2,COG1FSIM,1
G1FMCCP1,COG1FSIM,2
G1FMFLT,COG1FSIM,3
G1FMT2M,COG1FSIM,4
G1FMHLT1,COG1FSIM,5
G1FMHLT2,COG1FSIM,6
G1ARSEN,COG1ASD0,6
G1ASDE,COG1ASD0,7
G1ASD0L0,COG1ASD0,2
G1ASD0L1,COG1ASD0,3
G1ASD1L0,COG1ASD0,4
G1ASD1L1,COG1ASD0,5
G1ASDSFLT,COG1ASD1,0
G1ASDSC1,COG1ASD1,1
G1ASDSC2,COG1ASD1,2
G1ASDSHLT1,COG1ASD1,3
G1ASDSHLT2,COG1ASD1,4

[FreeRAM]
20:7F
A0:BF

[NoBankRAM]
'NoBankRAM is somewhat misnamed - it is used for the defintion of (any) access bank locations
'If a memory location is defined in both NoBankRAM and FreeRAM, then the compiler knows that it is access bank RAM.
'If an SFR location is in one of the NoBankRAM ranges, then the compiler knows not to do any bank selection when accessing that register.

'The NoBankRAM section must include two ranges, one for access bank RAM, one for access bank SFRs, or there will be issues.
'The first range MUST be the ACCESS RAM range
'The first range is the FAST SFR range

'If there are no ranges defined in NoBankRAM, the compiler will try to guess them.
'On 18Fs, it will guess based on where the lowest SFR is, and from what the total RAM on the chip is. If there's only one range defined
'in the NoBankRAM locations, the compiler will assume that is the range for the RAM, and then will guess where the range for the access bank SFRs is.
70:7F

[Pins-DIP]
13,RA0(IO)
12,RA1(IO)
11,RA2(IO)
4,RA3(IO)
3,RA4(IO)
2,RA5(IO)
10,RC0(IO)
9,RC1(IO)
8,RC2(IO)
7,RC3(IO)
6,RC4(IO)
5,RC5(IO)
14,Vss
1,Vdd

[ConfigOps]
'For details of the config options see the microcontroller datasheet
'The first parameter is the configuration field that can be used to expose specific configuration bits
'The other parameters are the configuration field options that can be set
OSC=FOSC0_INT,FOSC0_EC
WDTE=OFF,ON
PWRTE=ON,OFF
MCLRE=OFF,ON
CP=ON,OFF
BOREN=DIS,SLEEP_DIS,EN
WRT=ALL,HALF,FOURTH,OFF
CLKOUTEN=ON,OFF

[Config]
'For details of the config addresses see the microcontroller datasheet
FOSC0_INT,1,16382
FOSC0_EC,1,16383
WDTE_OFF,1,16375
WDTE_ON,1,16383
PWRTE_ON,1,16367
PWRTE_OFF,1,16383
MCLRE_OFF,1,16351
MCLRE_ON,1,16383
CP_ON,1,16319
CP_OFF,1,16383
BOREN_DIS,1,15615
BOREN_SLEEP_DIS,1,16127
BOREN_EN,1,16383
WRT_ALL,1,13311
WRT_HALF,1,14335
WRT_FOURTH,1,15359
WRT_OFF,1,16383
CLKOUTEN_ON,1,12287
CLKOUTEN_OFF,1,16383
DEVID1,1,8198
IDLOC0,1,8192
IDLOC1,1,8193
IDLOC2,1,8194
IDLOC3,1,8195

