'GCBASIC/GCGB Chip Data File
'Chip: 16LF819
'Main Format last revised:   14/07/2017
'Header Format last revised: 22/05/2021

[ChipData]
';All items in the ChipData section are available to user programs as constants
';The constants have the prefix of Chip: See the examples below

'This constant is exposed as ChipWORDS
Prog=2048

'This constant is exposed as ChipEEPROM
EEPROM=256

'This constant is exposed as ChipRAM
RAM=256

'This constant is exposed as ChipIO
I/O=16

'This constant is exposed as ChipADC
ADC=5

'This constant is exposed as ChipMhz
MaxMHz=20

'This constant is exposed with only the first parameter (if more than one)
IntOsc=8, 4, 2, 1, 0.5, 0.25, 0.125

'This constant is exposed as ChipPins
Pins=18

'This constant is exposed as ChipFamily
Family=14

'This constant is exposed as ChipSubFamily
SubFamily=14000

'This constant is exposed as ChipConfWords
ConfigWords=1

'This constant is exposed as ChipPSP
PSP=0

'This constant is exposed as ChipUSART
USART=0

'This constant is exposed as ChipMaxAddress
MaxAddress=511

';Microcontroller specific configuration Constants used in specific libraries, compiler or user programs
';This section of constants is specific to a microcontroller, so the constants may not be present for all microcontrollers

'ChipStacks constant can be used in user programs and provides the available stack depth
Stacks=8

'ChipUserIDAddress constant is used in user programs and provides the User ID address
UserIDAddress=8192

'ChipUserIDLength constant is used in user programs to provide the length of the UserID (in words)
UserIDLength=4

'ChipSelfWrite constant is used within the compiler to indicate the chip is self write capable
SelfWrite=1

[Interrupts]
'For specific details of the interrupts see the microcontroller datasheet
'The first parameter is the Great Cow BASIC identifier used in user code to expose the specific interrupt
ADCReady:ADIE,ADIF
CCP1:CCP1IE,CCP1IF
EEPROMReady:EEIE,EEIF
ExtInt0:INTE,INTF
PORTBChange:RBIE,RBIF
PortChange:RBIE,RBIF
SSP1Ready:SSPIE,SSPIF
Timer0Overflow:TMR0IE,TMR0IF
Timer1Overflow:TMR1IE,TMR1IF
Timer2Match:TMR2IE,TMR2IF

[Registers]
'For specific details of the registers see the microcontroller datasheet
'The first parameter is the Great Cow BASIC register name used in user code to expose the specific register
INDF,0
TMR0,1
PCL,2
STATUS,3
FSR,4
PORTA,5
PORTB,6
PCLATH,10
INTCON,11
PIR1,12
PIR2,13
TMR1,14
TMR1L,14
TMR1H,15
T1CON,16
TMR2,17
T2CON,18
SSPBUF,19
SSPCON,20
CCPR1,21
CCPR1L,21
CCPR1H,22
CCP1CON,23
ADRESH,30
ADCON0,31
OPTION_REG,129
TRISA,133
TRISB,134
PIE1,140
PIE2,141
PCON,142
OSCCON,143
OSCTUNE,144
PR2,146
SSPADD,147
SSPSTAT,148
ADRESL,158
ADCON1,159
EEDATA,268
EEADR,269
EEDATH,270
EEADRH,271
EECON1,396
EECON2,397

[Bits]
'For details of the bits (relative to a register in terms of registerbits) see the microcontroller datasheet
'The first parameter is the Great Cow BASIC bit name used in user code to expose the specific registerbit
TMR1IF,PIR1,0
TMR2IF,PIR1,1
CCP1IF,PIR1,2
SSPIF,PIR1,3
ADIF,PIR1,6
TMR1ON,T1CON,0
TMR1CS,T1CON,1
NOT_T1SYNC,T1CON,2
T1OSCEN,T1CON,3
T1CKPS0,T1CON,4
T1CKPS1,T1CON,5
T1INSYNC,T1CON,2
TMR1IE,PIE1,0
TMR2IE,PIE1,1
CCP1IE,PIE1,2
SSPIE,PIE1,3
ADIE,PIE1,6
C,STATUS,0
DC,STATUS,1
Z,STATUS,2
NOT_PD,STATUS,3
NOT_TO,STATUS,4
IRP,STATUS,7
RP0,STATUS,5
RP1,STATUS,6
RA0,PORTA,0
RA1,PORTA,1
RA2,PORTA,2
RA3,PORTA,3
RA4,PORTA,4
RA5,PORTA,5
RA6,PORTA,6
RA7,PORTA,7
RB0,PORTB,0
RB1,PORTB,1
RB2,PORTB,2
RB3,PORTB,3
RB4,PORTB,4
RB5,PORTB,5
RB6,PORTB,6
RB7,PORTB,7
RBIF,INTCON,0
INTF,INTCON,1
TMR0IF,INTCON,2
RBIE,INTCON,3
INTE,INTCON,4
TMR0IE,INTCON,5
PEIE,INTCON,6
GIE,INTCON,7
EEIF,PIR2,4
TMR2ON,T2CON,2
T2CKPS0,T2CON,0
T2CKPS1,T2CON,1
TOUTPS0,T2CON,3
TOUTPS1,T2CON,4
TOUTPS2,T2CON,5
TOUTPS3,T2CON,6
CKP,SSPCON,4
SSPEN,SSPCON,5
SSPOV,SSPCON,6
WCOL,SSPCON,7
SSPM0,SSPCON,0
SSPM1,SSPCON,1
SSPM2,SSPCON,2
SSPM3,SSPCON,3
CCP1Y,CCP1CON,4
CCP1X,CCP1CON,5
CCP1M0,CCP1CON,0
CCP1M1,CCP1CON,1
CCP1M2,CCP1CON,2
CCP1M3,CCP1CON,3
ADON,ADCON0,0
GO_DONE,ADCON0,2
GO_NOT_DONE,ADCON0,2
GO,ADCON0,2
CHS0,ADCON0,3
CHS1,ADCON0,4
CHS2,ADCON0,5
ADCS0,ADCON0,6
ADCS1,ADCON0,7
NOT_DONE,ADCON0,2
ADCON0_GO_DONE,ADCON0,2
PSA,OPTION_REG,3
T0SE,OPTION_REG,4
T0CS,OPTION_REG,5
INTEDG,OPTION_REG,6
NOT_RBPU,OPTION_REG,7
PS0,OPTION_REG,0
PS1,OPTION_REG,1
PS2,OPTION_REG,2
TRISA0,TRISA,0
TRISA1,TRISA,1
TRISA2,TRISA,2
TRISA3,TRISA,3
TRISA4,TRISA,4
TRISA5,TRISA,5
TRISA6,TRISA,6
TRISA7,TRISA,7
TRISB0,TRISB,0
TRISB1,TRISB,1
TRISB2,TRISB,2
TRISB3,TRISB,3
TRISB4,TRISB,4
TRISB5,TRISB,5
TRISB6,TRISB,6
TRISB7,TRISB,7
EEIE,PIE2,4
NOT_BOR,PCON,0
NOT_POR,PCON,1
NOT_BO,PCON,0
IOFS,OSCCON,2
IRCF0,OSCCON,4
IRCF1,OSCCON,5
IRCF2,OSCCON,6
TUN0,OSCTUNE,0
TUN1,OSCTUNE,1
TUN2,OSCTUNE,2
TUN3,OSCTUNE,3
TUN4,OSCTUNE,4
TUN5,OSCTUNE,5
BF,SSPSTAT,0
UA,SSPSTAT,1
R_NOT_W,SSPSTAT,2
S,SSPSTAT,3
P,SSPSTAT,4
D_NOT_A,SSPSTAT,5
CKE,SSPSTAT,6
SMP,SSPSTAT,7
R,SSPSTAT,2
D,SSPSTAT,5
I2C_READ,SSPSTAT,2
I2C_START,SSPSTAT,3
I2C_STOP,SSPSTAT,4
I2C_DATA,SSPSTAT,5
NOT_W,SSPSTAT,2
NOT_A,SSPSTAT,5
NOT_WRITE,SSPSTAT,2
NOT_ADDRESS,SSPSTAT,5
R_W,SSPSTAT,2
D_A,SSPSTAT,5
READ_WRITE,SSPSTAT,2
DATA_ADDRESS,SSPSTAT,5
ADCS2,ADCON1,6
ADFM,ADCON1,7
PCFG0,ADCON1,0
PCFG1,ADCON1,1
PCFG2,ADCON1,2
PCFG3,ADCON1,3
RD,EECON1,0
WR,EECON1,1
WREN,EECON1,2
WRERR,EECON1,3
FREE,EECON1,4
EEPGD,EECON1,7

[FreeRAM]
20:7F
A0:EF
120:16F

[NoBankRAM]
'NoBankRAM is somewhat misnamed - it is used for the defintion of (any) access bank locations
'If a memory location is defined in both NoBankRAM and FreeRAM, then the compiler knows that it is access bank RAM.
'If an SFR location is in one of the NoBankRAM ranges, then the compiler knows not to do any bank selection when accessing that register.

'The NoBankRAM section must include two ranges, one for access bank RAM, one for access bank SFRs, or there will be issues.
'The first range MUST be the ACCESS RAM range
'The first range is the FAST SFR range

'If there are no ranges defined in NoBankRAM, the compiler will try to guess them.
'On 18Fs, it will guess based on where the lowest SFR is, and from what the total RAM on the chip is. If there's only one range defined
'in the NoBankRAM locations, the compiler will assume that is the range for the RAM, and then will guess where the range for the access bank SFRs is.
70:7F

[Pins-DIP]
17,RA0(IO)
18,RA1(IO)
1,RA2(IO)
2,RA3(IO)
3,RA4(IO)
4,RA5(I),MCLR
15,RA6(IO),OSC2
16,RA7(IO),OSC1
6,RB0(IO)
7,RB1(IO),SDA(IO),SDI(I)
8,RB2(IO),SDO(O)
9,RB3(IO)
10,RB4(IO),SCL(IO),SCK(IO)
11,RB5(IO)
12,RB6(IO)
13,RB7(IO)
5,Vss
14,Vdd

[ConfigOps]
'For details of the config options see the microcontroller datasheet
'The first parameter is the configuration field that can be used to expose specific configuration bits
'The other parameters are the configuration field options that can be set
OSC=LP,XT,HS,EC,EXTCLK,INTOSCIO,INTRC_IO,INTOSCCLK,INTRC_CLKOUT,EXTRCIO,EXTRC_IO,EXTRCCLK,EXTRC_CLKOUT
WDTE=OFF,ON
PWRTE=ON,OFF
MCLRE=OFF,ON
BOREN=OFF,ON
LVP=OFF,ON
CPD=ON,OFF
WRT=1536,ENABLE_1536,1024,ENABLE_1024,512,ENABLE_512,OFF,ENABLE_OFF
DEBUG=ON,OFF
CCPMX=RB3,RB2
CP=ON,ALL,OFF

[Config]
'For details of the config addresses see the microcontroller datasheet
FOSC_LP,1,16364
LP_OSC,1,16364
FOSC_XT,1,16365
XT_OSC,1,16365
FOSC_HS,1,16366
HS_OSC,1,16366
FOSC_EC,1,16367
EXTCLK,1,16367
FOSC_INTOSCIO,1,16380
INTRC_IO,1,16380
FOSC_INTOSCCLK,1,16381
INTRC_CLKOUT,1,16381
FOSC_EXTRCIO,1,16382
EXTRC_IO,1,16382
FOSC_EXTRCCLK,1,16383
EXTRC_CLKOUT,1,16383
WDTE_OFF,1,16379
WDTE_ON,1,16383
PWRTE_ON,1,16375
PWRTE_OFF,1,16383
MCLRE_OFF,1,16351
MCLRE_ON,1,16383
BOREN_OFF,1,16319
BOREN_ON,1,16383
LVP_OFF,1,16255
LVP_ON,1,16383
CPD_ON,1,16127
CPD_OFF,1,16383
WRT_1536,1,14847
WRT_ENABLE_1536,1,14847
WRT_1024,1,15359
WRT_ENABLE_1024,1,15359
WRT_512,1,15871
WRT_ENABLE_512,1,15871
WRT_OFF,1,16383
WRT_ENABLE_OFF,1,16383
DEBUG_ON,1,14335
DEBUG_OFF,1,16383
CCPMX_RB3,1,12287
CCPMX_RB2,1,16383
CP_ON,1,8191
CP_ALL,1,8191
CP_OFF,1,16383
DEVID1,1,8198
IDLOC0,1,8192
IDLOC1,1,8193
IDLOC2,1,8194
IDLOC3,1,8195

