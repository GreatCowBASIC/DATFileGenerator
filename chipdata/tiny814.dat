;        .DAT sections
;==========================================================================
;
;  Built by GcBASIC converter on : 08-08-2024
;  XC8 processor include for the chip shown below
;
; Microchip IDE version 6.05
; C:\Users\admin\.mchp_packs\index.idx
; C:\Users\admin\.mchp_packs\Microchip\ATtiny_DFP\3.1.260\avrasm\inc\tn814def.inc
; avr chipdata.csv
; C:\Users\admin\.mchp_packs\Microchip\ATtiny_DFP\3.1.260\edc\ATTINY814.PIC
; 
;
; Registers not processed: RTC_CMP,SREG,CPU_SPL, CPU_SPH 
; Bits not processed: CPU_RAMPZ
;==========================================================================
;==========================================================================
;
;       Register Definitions
;
;==========================================================================

;----- Register Files -----------------------------------------------------

[ChipData]
';All items in the ChipData section are available to user programs as constants
';The constants have the prefix of Chip: See the details below

'This constant is exposed as ChipWORDS
Prog=8192

'This constant is exposed as ChipEEPROM
EEPROM=128

'This constant is exposed as ChipRAM
RAM=512

'This constant is exposed as ChipIO - sourced from `avr chipdata.csv`
I/O=12

'This constant is exposed as ChipADC - sourced from `avr chipdata.csv`
ADC=10

'This constant is exposed as ChipMhz
MaxMHz=20
'This constant is exposed with only the first parameter (if more than one)
IntOsc=20, 10, 5, 2.5, 1.25, 0.625, 0.3125, 3.3333333, 2, 1.6666667, 0.8333333, 0.4166667

'This constant is exposed as ChipPins - sourced from `avr chipdata.csv`
Pins=14

'This constant is exposed as ChipUSART - sourced from `avr chipdata.csv`
USART=1

'This constant is exposed as ChipFamily - sourced from `avr chipdata.csv`
Family=140

'This constant is exposed as ChipConfWords
ConfigWords=0

'This constant is exposed as ChipGPR
GPR=32

'This constant is exposed as ChipMaxAddress
MaxAddress=8192

'This constant is exposed as ChipHardwareMult
HardwareMult=y

'This constant is exposed as ChipAVRFamily - sourced from `avr chipdata.csv`
AVRFamily=tinyAVRSeries1

'This constant is exposed as ChipAVRGCC - sourced from `avr chipdata.csv`
AVRGCC=avrxmega3

'This constant is exposed as ChipAVRDX - sourced from `avr chipdata.csv`
AVRDX=1

'This constant is exposed as ChipNotTested - sourced from `avr chipdata.csv`
' NotTested is a numeric bitwise value
' 1 = Chip DAT file not tested and therefore no validated
' 2 = Chip DAT file has an [interrupt] section that is incomplete
NotTested=2

[Pointers]
'This section are the registers used by compilers
XL:26
XH:27
YL:28
YH:29
ZL:30
ZH:31

[Interrupts]
'For specific details of the interrupts see the microcontroller datasheet
'The first parameter is the GCBASIC identifier used in user code to expose the specific interrupt
; CRCSCAN interrupt vectors
	NMIfromCRC:CRCSCAN_NMI,1,,
; BOD interrupt vectors
	BOD_VLM:BOD_VLM,2,,
; PORTA interrupt vectors
		PORTA_PORT:PORTA_PORT,3,,
; PORTB interrupt vectors
		PORTB_PORT:PORTB_PORT,4,,
; RTC interrupt vectors
		RTC_CNT:RTC_CNT,6,,
		RTC_PIT:RTC_PIT,7,,
; TCA0 interrupt vectors
		TCA0_LUNF:TCA0_LUNF,8,,
		TCA0_HUNF:TCA0_HUNF,9,,
		TCA0_CMP0:TCA0_CMP0,10,,
		TCA0_CMP1:TCA0_CMP1,11,,
		TCA0_CMP2:TCA0_CMP2,12,,
; TCB0 interrupt vectors
		TCB0_INT:TCB0_INT,13,,
; TCD0 interrupt vectors
		TCD0_OVF:TCD0_OVF,14,,
		TCD0_TRIG:TCD0_TRIG,15,,
; AC0 interrupt vectors
		AC0_AC:AC0_AC,16,,
; ADC0 interrupt vectors
		ADC0_RESRDY:ADC0_RESRDY,17,,
		ADC0_WCOMP:ADC0_WCOMP,18,,
; TWI0 interrupt vectors
		TWI0_TWIS:TWI0_TWIS,19,,
		TWI0_TWIM:TWI0_TWIM,20,,
; SPI0 interrupt vectors
		SPI0_INT:SPI0_INT,21,,
; USART0 interrupt vectors
		USART0_RXC:USART0_RXC,22,,
		USART0_DRE:USART0_DRE,23,,
		USART0_TXC:USART0_TXC,24,,
; NVMCTRL interrupt vectors
		NVMCTRL_EE:NVMCTRL_EE,25,,

[AVRAlias]
  'This section is for the AVRDX support
  'The aliasing is megaAVR register = value = AVRDX register
  ' example:          ALIAS_PORTA_DIR = 0 = DDRA
  '
 'Format is Strict: 
  ' There must be two entries per alias, the order is not importand, the relatiionship as shown above is critical.
  ' The value is NOT a register address value. The value MUST be unique
  ' The assignment must be an equal sign `=`
   '
 'How does this all work?
  ' The compiler will look up a megaAVR register ( ignoring any register.bits), and, using the returned number, lookup the AVRDX alias.
  ' DDRA = 0, lookup the AVRDX alias of 0, returns ALIAS_PORTA_DIR
  ' the compiler strips off the `ALIAS_`PORTA_DIR prefix as the register to be used.
  '
 'A deeper dive.
  ' The compiler treats this list of AVRAlias(es) just like the [register] section of this file.
  ' The compiler loads these AVRAlias(es) but with the attribute of .ALIAS set (true).
  ' This means, using the example above, that DDRA is not a real register and it is has the .ALIAS attribute set. 
  ' So, the compiler knows that DDRA for this specific chip and all AVRDX chips that DDRA is actually to be transformed to an AVRDX set of instructiions.

'PortA
ALIAS_PORTA_DIR=0                                      ; 0000             
DDRA=0                                          ; 0000 alias
ALIAS_PORTA_OUT=1                                      ; 0001             
PORTA=1                                         ; 0001 alias         
ALIAS_PORTA_IN=2                                       ; 0002   
PINA=2                                          ; 0002 alias

'PortB
ALIAS_PORTB_DIR=4                                      ; 0004            
DDRB=4                                          ; 0004 alias
ALIAS_PORTB_OUT=5                                      ; 0005              
PORTB=5                                         ; 0005 alias
ALIAS_PORTB_IN=6                                       ; 0006
PINB=6                                          ; 0006 alias

'PortC
ALIAS_PORTC_DIR=8                                      ; 0008          
DDRC=8                                          ; 0008 alias
ALIAS_PORTC_OUT=9                                      ; 0009
PORTC=9                                         ; 0009 alias
ALIAS_PORTC_IN=10                                      ; 000A
PINC=10                                         ; 000A alias

'Additional Aliases are required
ALIAS_CPU_SPL=61    
CPU_SPL=61    
ALIAS_CPU_SPH=62                                                                                     
CPU_SPH=62 
'Additional lock register alias
ALIAS_CPU_CCP=52                                  ; 0034
CPU_CCP=52                                        ; 0034
'Required register
SREG=63                                           ; 003F alias

[Registers]
'For specific details of the registers see the microcontroller datasheet
'The first parameter is the GCBASIC register name used in user code to expose the specific register
AC0_CTRLA,1648
AC0_MUXCTRLA,1650
AC0_INTCTRL,1654
AC0_STATUS,1655
ADC0_CTRLA,1536
ADC0_CTRLB,1537
ADC0_CTRLC,1538
ADC0_CTRLD,1539
ADC0_CTRLE,1540
ADC0_SAMPCTRL,1541
ADC0_MUXPOS,1542
ADC0_COMMAND,1544
ADC0_EVCTRL,1545
ADC0_INTCTRL,1546
ADC0_INTFLAGS,1547
ADC0_DBGCTRL,1548
ADC0_TEMP,1549
ADC0_RES,1552
ADC0_RESL,1552
ADC0_RESH,1553
ADC0_WINLT,1554
ADC0_WINLTL,1554
ADC0_WINLTH,1555
ADC0_WINHT,1556
ADC0_WINHTL,1556
ADC0_WINHTH,1557
ADC0_CALIB,1558
BOD_CTRLA,128
BOD_CTRLB,129
BOD_VLMCTRLA,136
BOD_INTCTRL,137
BOD_INTFLAGS,138
BOD_STATUS,139
CCL_CTRLA,448
CCL_SEQCTRL0,449
CCL_LUT0CTRLA,453
CCL_LUT0CTRLB,454
CCL_LUT0CTRLC,455
CCL_TRUTH0,456
CCL_LUT1CTRLA,457
CCL_LUT1CTRLB,458
CCL_LUT1CTRLC,459
CCL_TRUTH1,460
CLKCTRL_MCLKCTRLA,96
CLKCTRL_MCLKCTRLB,97
CLKCTRL_MCLKLOCK,98
CLKCTRL_MCLKSTATUS,99
CLKCTRL_OSC20MCTRLA,112
CLKCTRL_OSC20MCALIBA,113
CLKCTRL_OSC20MCALIBB,114
CLKCTRL_OSC32KCTRLA,120
CLKCTRL_XOSC32KCTRLA,124
CPU_CCP,52
; .equ CPU_SPL = 0x003D                    ; Stack Pointer Low a duplicate or resevered register or ALIAS_
; .equ CPU_SPH = 0x003E                    ; Stack Pointer High a duplicate or resevered register or ALIAS_
CPU_SREG,63
CPUINT_CTRLA,272
CPUINT_STATUS,273
CPUINT_LVL0PRI,274
CPUINT_LVL1VEC,275
CRCSCAN_CTRLA,288
CRCSCAN_CTRLB,289
CRCSCAN_STATUS,290
DAC0_CTRLA,1664
DAC0_DATA,1665
EVSYS_ASYNCSTROBE,384
EVSYS_SYNCSTROBE,385
EVSYS_ASYNCCH0,386
EVSYS_ASYNCCH1,387
EVSYS_ASYNCCH2,388
EVSYS_ASYNCCH3,389
EVSYS_SYNCCH0,394
EVSYS_SYNCCH1,395
EVSYS_ASYNCUSER0,402
EVSYS_ASYNCUSER1,403
EVSYS_ASYNCUSER2,404
EVSYS_ASYNCUSER3,405
EVSYS_ASYNCUSER4,406
EVSYS_ASYNCUSER5,407
EVSYS_ASYNCUSER6,408
EVSYS_ASYNCUSER7,409
EVSYS_ASYNCUSER8,410
EVSYS_ASYNCUSER9,411
EVSYS_ASYNCUSER10,412
EVSYS_SYNCUSER0,418
EVSYS_SYNCUSER1,419
FUSE_WDTCFG,4736
FUSE_BODCFG,4737
FUSE_OSCCFG,4738
FUSE_TCD0CFG,4740
FUSE_SYSCFG0,4741
FUSE_SYSCFG1,4742
FUSE_APPEND,4743
FUSE_BOOTEND,4744
GPIO_GPIOR0,28
GPIO_GPIOR1,29
GPIO_GPIOR2,30
GPIO_GPIOR3,31
LOCKBIT_LOCKBIT,4746
NVMCTRL_CTRLA,4096
NVMCTRL_CTRLB,4097
NVMCTRL_STATUS,4098
NVMCTRL_INTCTRL,4099
NVMCTRL_INTFLAGS,4100
NVMCTRL_DATA,4102
NVMCTRL_DATAL,4102
NVMCTRL_DATAH,4103
NVMCTRL_ADDR,4104
NVMCTRL_ADDRL,4104
NVMCTRL_ADDRH,4105
PORTA_DIR,1024
PORTA_DIRSET,1025
PORTA_DIRCLR,1026
PORTA_DIRTGL,1027
PORTA_OUT,1028
PORTA_OUTSET,1029
PORTA_OUTCLR,1030
PORTA_OUTTGL,1031
PORTA_IN,1032
PORTA_INTFLAGS,1033
PORTA_PIN0CTRL,1040
PORTA_PIN1CTRL,1041
PORTA_PIN2CTRL,1042
PORTA_PIN3CTRL,1043
PORTA_PIN4CTRL,1044
PORTA_PIN5CTRL,1045
PORTA_PIN6CTRL,1046
PORTA_PIN7CTRL,1047
PORTB_DIR,1056
PORTB_DIRSET,1057
PORTB_DIRCLR,1058
PORTB_DIRTGL,1059
PORTB_OUT,1060
PORTB_OUTSET,1061
PORTB_OUTCLR,1062
PORTB_OUTTGL,1063
PORTB_IN,1064
PORTB_INTFLAGS,1065
PORTB_PIN0CTRL,1072
PORTB_PIN1CTRL,1073
PORTB_PIN2CTRL,1074
PORTB_PIN3CTRL,1075
PORTB_PIN4CTRL,1076
PORTB_PIN5CTRL,1077
PORTB_PIN6CTRL,1078
PORTB_PIN7CTRL,1079
PORTMUX_CTRLA,512
PORTMUX_CTRLB,513
PORTMUX_CTRLC,514
PORTMUX_CTRLD,515
RSTCTRL_RSTFR,64
RSTCTRL_SWRR,65
RTC_CTRLA,320
RTC_STATUS,321
RTC_INTCTRL,322
RTC_INTFLAGS,323
RTC_TEMP,324
RTC_DBGCTRL,325
RTC_CLKSEL,327
RTC_CNT,328
RTC_CNTL,328
RTC_CNTH,329
RTC_PER,330
RTC_PERL,330
RTC_PERH,331
; .equ RTC_CMP = 0x014C                    ; Compare a duplicate or resevered register or ALIAS_
; .equ RTC_CMPL = 0x014C                   ; Compare low byte a duplicate or resevered register or ALIAS_
; .equ RTC_CMPH = 0x014D                   ; Compare hi byte a duplicate or resevered register or ALIAS_
RTC_PITCTRLA,336
RTC_PITSTATUS,337
RTC_PITINTCTRL,338
RTC_PITINTFLAGS,339
RTC_PITDBGCTRL,341
SIGROW_DEVICEID0,4352
SIGROW_DEVICEID1,4353
SIGROW_DEVICEID2,4354
SIGROW_SERNUM0,4355
SIGROW_SERNUM1,4356
SIGROW_SERNUM2,4357
SIGROW_SERNUM3,4358
SIGROW_SERNUM4,4359
SIGROW_SERNUM5,4360
SIGROW_SERNUM6,4361
SIGROW_SERNUM7,4362
SIGROW_SERNUM8,4363
SIGROW_SERNUM9,4364
SIGROW_TEMPSENSE0,4384
SIGROW_TEMPSENSE1,4385
SIGROW_OSC16ERR3V,4386
SIGROW_OSC16ERR5V,4387
SIGROW_OSC20ERR3V,4388
SIGROW_OSC20ERR5V,4389
SLPCTRL_CTRLA,80
SPI0_CTRLA,2080
SPI0_CTRLB,2081
SPI0_INTCTRL,2082
SPI0_INTFLAGS,2083
SPI0_DATA,2084
SYSCFG_REVID,3841
SYSCFG_EXTBRK,3842
TCA0_SINGLE_CTRLA,2560
TCA0_SPLIT_CTRLA,2560
TCA0_SINGLE_CTRLB,2561
TCA0_SPLIT_CTRLB,2561
TCA0_SINGLE_CTRLC,2562
TCA0_SPLIT_CTRLC,2562
TCA0_SINGLE_CTRLD,2563
TCA0_SPLIT_CTRLD,2563
TCA0_SINGLE_CTRLECLR,2564
TCA0_SPLIT_CTRLECLR,2564
TCA0_SINGLE_CTRLESET,2565
TCA0_SPLIT_CTRLESET,2565
TCA0_SINGLE_CTRLFCLR,2566
TCA0_SINGLE_CTRLFSET,2567
TCA0_SINGLE_EVCTRL,2569
TCA0_SINGLE_INTCTRL,2570
TCA0_SPLIT_INTCTRL,2570
TCA0_SINGLE_INTFLAGS,2571
TCA0_SPLIT_INTFLAGS,2571
TCA0_SINGLE_DBGCTRL,2574
TCA0_SPLIT_DBGCTRL,2574
TCA0_SINGLE_TEMP,2575
TCA0_SINGLE_CNT,2592
TCA0_SINGLE_CNTL,2592
TCA0_SINGLE_CNTH,2593
TCA0_SPLIT_LCNT,2592
TCA0_SPLIT_HCNT,2593
TCA0_SINGLE_PER,2598
TCA0_SINGLE_PERL,2598
TCA0_SINGLE_PERH,2599
TCA0_SPLIT_LPER,2598
TCA0_SPLIT_HPER,2599
TCA0_SINGLE_CMP0,2600
TCA0_SINGLE_CMP0L,2600
TCA0_SINGLE_CMP0H,2601
TCA0_SPLIT_LCMP0,2600
TCA0_SPLIT_HCMP0,2601
TCA0_SINGLE_CMP1,2602
TCA0_SINGLE_CMP1L,2602
TCA0_SINGLE_CMP1H,2603
TCA0_SPLIT_LCMP1,2602
TCA0_SPLIT_HCMP1,2603
TCA0_SINGLE_CMP2,2604
TCA0_SINGLE_CMP2L,2604
TCA0_SINGLE_CMP2H,2605
TCA0_SPLIT_LCMP2,2604
TCA0_SPLIT_HCMP2,2605
TCA0_SINGLE_PERBUF,2614
TCA0_SINGLE_PERBUFL,2614
TCA0_SINGLE_PERBUFH,2615
TCA0_SINGLE_CMP0BUF,2616
TCA0_SINGLE_CMP0BUFL,2616
TCA0_SINGLE_CMP0BUFH,2617
TCA0_SINGLE_CMP1BUF,2618
TCA0_SINGLE_CMP1BUFL,2618
TCA0_SINGLE_CMP1BUFH,2619
TCA0_SINGLE_CMP2BUF,2620
TCA0_SINGLE_CMP2BUFL,2620
TCA0_SINGLE_CMP2BUFH,2621
TCB0_CTRLA,2624
TCB0_CTRLB,2625
TCB0_EVCTRL,2628
TCB0_INTCTRL,2629
TCB0_INTFLAGS,2630
TCB0_STATUS,2631
TCB0_DBGCTRL,2632
TCB0_TEMP,2633
TCB0_CNT,2634
TCB0_CNTL,2634
TCB0_CNTH,2635
TCB0_CCMP,2636
TCB0_CCMPL,2636
TCB0_CCMPH,2637
TCD0_CTRLA,2688
TCD0_CTRLB,2689
TCD0_CTRLC,2690
TCD0_CTRLD,2691
TCD0_CTRLE,2692
TCD0_EVCTRLA,2696
TCD0_EVCTRLB,2697
TCD0_INTCTRL,2700
TCD0_INTFLAGS,2701
TCD0_STATUS,2702
TCD0_INPUTCTRLA,2704
TCD0_INPUTCTRLB,2705
TCD0_FAULTCTRL,2706
TCD0_DLYCTRL,2708
TCD0_DLYVAL,2709
TCD0_DITCTRL,2712
TCD0_DITVAL,2713
TCD0_DBGCTRL,2718
TCD0_CAPTUREA,2722
TCD0_CAPTUREAL,2722
TCD0_CAPTUREAH,2723
TCD0_CAPTUREB,2724
TCD0_CAPTUREBL,2724
TCD0_CAPTUREBH,2725
TCD0_CMPASET,2728
TCD0_CMPASETL,2728
TCD0_CMPASETH,2729
TCD0_CMPACLR,2730
TCD0_CMPACLRL,2730
TCD0_CMPACLRH,2731
TCD0_CMPBSET,2732
TCD0_CMPBSETL,2732
TCD0_CMPBSETH,2733
TCD0_CMPBCLR,2734
TCD0_CMPBCLRL,2734
TCD0_CMPBCLRH,2735
TWI0_CTRLA,2064
TWI0_DBGCTRL,2066
TWI0_MCTRLA,2067
TWI0_MCTRLB,2068
TWI0_MSTATUS,2069
TWI0_MBAUD,2070
TWI0_MADDR,2071
TWI0_MDATA,2072
TWI0_SCTRLA,2073
TWI0_SCTRLB,2074
TWI0_SSTATUS,2075
TWI0_SADDR,2076
TWI0_SDATA,2077
TWI0_SADDRMASK,2078
USART0_RXDATAL,2048
USART0_RXDATAH,2049
USART0_TXDATAL,2050
USART0_TXDATAH,2051
USART0_STATUS,2052
USART0_CTRLA,2053
USART0_CTRLB,2054
USART0_CTRLC,2055
USART0_BAUD,2056
USART0_BAUDL,2056
USART0_BAUDH,2057
USART0_DBGCTRL,2059
USART0_EVCTRL,2060
USART0_TXPLCTRL,2061
USART0_RXPLCTRL,2062
USERROW_USERROW0,4864
USERROW_USERROW1,4865
USERROW_USERROW2,4866
USERROW_USERROW3,4867
USERROW_USERROW4,4868
USERROW_USERROW5,4869
USERROW_USERROW6,4870
USERROW_USERROW7,4871
USERROW_USERROW8,4872
USERROW_USERROW9,4873
USERROW_USERROW10,4874
USERROW_USERROW11,4875
USERROW_USERROW12,4876
USERROW_USERROW13,4877
USERROW_USERROW14,4878
USERROW_USERROW15,4879
USERROW_USERROW16,4880
USERROW_USERROW17,4881
USERROW_USERROW18,4882
USERROW_USERROW19,4883
USERROW_USERROW20,4884
USERROW_USERROW21,4885
USERROW_USERROW22,4886
USERROW_USERROW23,4887
USERROW_USERROW24,4888
USERROW_USERROW25,4889
USERROW_USERROW26,4890
USERROW_USERROW27,4891
USERROW_USERROW28,4892
USERROW_USERROW29,4893
USERROW_USERROW30,4894
USERROW_USERROW31,4895
VPORTA_DIR,0
VPORTA_OUT,1
VPORTA_IN,2
VPORTA_INTFLAGS,3
VPORTB_DIR,4
VPORTB_OUT,5
VPORTB_IN,6
VPORTB_INTFLAGS,7
VPORTC_DIR,8
VPORTC_OUT,9
VPORTC_IN,10
VPORTC_INTFLAGS,11
VREF_CTRLA,160
VREF_CTRLB,161
WDT_CTRLA,256
WDT_STATUS,257

[Bits]
'For details of the bits (relative to a register in terms of registerbits) see the microcontroller datasheet
'The first parameter is the GCBASIC bit name used in user code to expose the specific registerbit
AC_ENABLE,AC,0			'  Enable bit position
AC_LPMODE,AC,3			'  Low Power Mode bit position
AC_OUTEN,AC,6			'  Output Buffer Enable bit position
AC_RUNSTDBY,AC,7			'  Run in Standby Mode bit position
AC_MUXPOS,AC,3			'  Positive Input MUX Selection bit position
AC_INVERT,AC,7			'  Invert AC Output bit position
AC_CMP,AC,0			'  Analog Comparator 0 Interrupt Enable bit position
AC_STATE,AC,4			'  Analog Comparator State bit position
ADC_ENABLE,ADC,0			'  ADC Enable bit position
ADC_FREERUN,ADC,1			'  ADC Freerun mode bit position
ADC_RESSEL,ADC,2			'  ADC Resolution bit position
ADC_RUNSTBY,ADC,7			'  Run standby mode bit position
ADC_SAMPCAP,ADC,6			'  Sample Capacitance Selection bit position
ADC_ASDV,ADC,4			'  Automatic Sampling Delay Variation bit position
ADC_STCONV,ADC,0			'  Start Conversion Operation bit position
ADC_STARTEI,ADC,0			'  Start Event Input Enable bit position
ADC_RESRDY,ADC,0			'  Result Ready Interrupt Enable bit position
ADC_WCMP,ADC,1			'  Window Comparator Interrupt Enable bit position
ADC_DBGRUN,ADC,0			'  Debug run bit position
ADC_DUTYCYC,ADC,0			'  Duty Cycle bit position
BOD_SAMPFREQ,BOD,4			'  Sample frequency bit position
BOD_VLMIE,BOD,0			'  voltage level monitor interrrupt enable bit position
BOD_VLMIF,BOD,0			'  Voltage level monitor interrupt flag bit position
BOD_VLMS,BOD,0			'  Voltage level monitor status bit position
CCL_ENABLE,CCL,0			'  Enable bit position
CCL_RUNSTDBY,CCL,6			'  Run in Standby bit position
CCL_OUTEN,CCL,3			'  Output Enable bit position
CCL_CLKSRC,CCL,6			'  Clock Source Selection bit position
CCL_EDGEDET,CCL,7			'  Edge Detection Enable bit position
CLKCTRL_CLKOUT,CLKCTRL,7			'  System clock out bit position
CLKCTRL_PEN,CLKCTRL,0			'  Prescaler enable bit position
CLKCTRL_LOCKEN,CLKCTRL,0			'  lock ebable bit position
CLKCTRL_SOSC,CLKCTRL,0			'  System Oscillator changing bit position
CLKCTRL_OSC20MS,CLKCTRL,4			'  20MHz oscillator status bit position
CLKCTRL_OSC32KS,CLKCTRL,5			'  32KHz oscillator status bit position
CLKCTRL_XOSC32KS,CLKCTRL,6			'  32.768 kHz Crystal Oscillator status bit position
CLKCTRL_EXTS,CLKCTRL,7			'  External Clock status bit position
CLKCTRL_RUNSTDBY,CLKCTRL,1			'  Run standby bit position
CLKCTRL_LOCK,CLKCTRL,7			'  Lock bit position
CLKCTRL_ENABLE,CLKCTRL,0			'  Enable bit position
CLKCTRL_SEL,CLKCTRL,2			'  Select bit position
CPU_C,CPU,0			'  Carry Flag bit position
CPU_Z,CPU,1			'  Zero Flag bit position
CPU_N,CPU,2			'  Negative Flag bit position
CPU_V,CPU,3			'  Two's Complement Overflow Flag bit position
CPU_S,CPU,4			'  N Exclusive Or V Flag bit position
CPU_H,CPU,5			'  Half Carry Flag bit position
CPU_T,CPU,6			'  Transfer Bit bit position
CPU_I,CPU,7			'  Global Interrupt Enable Flag bit position
CPUINT_LVL0RR,CPUINT,0			'  Round-robin Scheduling Enable bit position
CPUINT_CVT,CPUINT,5			'  Compact Vector Table bit position
CPUINT_IVSEL,CPUINT,6			'  Interrupt Vector Select bit position
CPUINT_LVL0EX,CPUINT,0			'  Level 0 Interrupt Executing bit position
CPUINT_LVL1EX,CPUINT,1			'  Level 1 Interrupt Executing bit position
CPUINT_NMIEX,CPUINT,7			'  Non-maskable Interrupt Executing bit position
CRCSCAN_ENABLE,CRCSCAN,0			'  Enable CRC scan bit position
CRCSCAN_NMIEN,CRCSCAN,1			'  Enable NMI Trigger bit position
CRCSCAN_RESET,CRCSCAN,7			'  Reset CRC scan bit position
CRCSCAN_BUSY,CRCSCAN,0			'  CRC Busy bit position
CRCSCAN_OK,CRCSCAN,1			'  CRC Ok bit position
DAC_ENABLE,DAC,0			'  DAC Enable bit position
DAC_OUTEN,DAC,6			'  Output Buffer Enable bit position
DAC_RUNSTDBY,DAC,7			'  Run in Standby Mode bit position
FUSE_SAMPFREQ,FUSE,4			'  BOD Sample Frequency bit position
FUSE_OSCLOCK,FUSE,7			'  Oscillator Lock bit position
FUSE_CMPA,FUSE,0			'  Compare A Default Output Value bit position
FUSE_CMPB,FUSE,1			'  Compare B Default Output Value bit position
FUSE_CMPC,FUSE,2			'  Compare C Default Output Value bit position
FUSE_CMPD,FUSE,3			'  Compare D Default Output Value bit position
FUSE_CMPAEN,FUSE,4			'  Compare A Output Enable bit position
FUSE_CMPBEN,FUSE,5			'  Compare B Output Enable bit position
FUSE_CMPCEN,FUSE,6			'  Compare C Output Enable bit position
FUSE_CMPDEN,FUSE,7			'  Compare D Output Enable bit position
FUSE_EESAVE,FUSE,0			'  EEPROM Save bit position
NVMCTRL_APCWP,NVMCTRL,0			'  Application code write protect bit position
NVMCTRL_BOOTLOCK,NVMCTRL,1			'  Boot Lock bit position
NVMCTRL_FBUSY,NVMCTRL,0			'  Flash busy bit position
NVMCTRL_EEBUSY,NVMCTRL,1			'  EEPROM busy bit position
NVMCTRL_WRERROR,NVMCTRL,2			'  Write error bit position
NVMCTRL_EEREADY,NVMCTRL,0			'  EEPROM Ready bit position
PORT_PULLUPEN,PORT,3			'  Pullup enable bit position
PORT_INVEN,PORT,7			'  Inverted I/O Enable bit position
PORTMUX_EVOUT0,PORTMUX,0			'  Event Output 0 bit position
PORTMUX_EVOUT1,PORTMUX,1			'  Event Output 1 bit position
PORTMUX_EVOUT2,PORTMUX,2			'  Event Output 2 bit position
PORTMUX_LUT0,PORTMUX,4			'  Configurable Custom Logic LUT0 bit position
PORTMUX_LUT1,PORTMUX,5			'  Configurable Custom Logic LUT1 bit position
PORTMUX_USART0,PORTMUX,0			'  Port Multiplexer USART0 bit position
PORTMUX_SPI0,PORTMUX,2			'  Port Multiplexer SPI0 bit position
PORTMUX_TWI0,PORTMUX,4			'  Port Multiplexer TWI0 bit position
PORTMUX_TCA00,PORTMUX,0			'  Port Multiplexer TCA0 Output 0 bit position
PORTMUX_TCA01,PORTMUX,1			'  Port Multiplexer TCA0 Output 1 bit position
PORTMUX_TCA02,PORTMUX,2			'  Port Multiplexer TCA0 Output 2 bit position
PORTMUX_TCA03,PORTMUX,3			'  Port Multiplexer TCA0 Output 3 bit position
PORTMUX_TCA04,PORTMUX,4			'  Port Multiplexer TCA0 Output 4 bit position
PORTMUX_TCA05,PORTMUX,5			'  Port Multiplexer TCA0 Output 5 bit position
PORTMUX_TCB0,PORTMUX,0			'  Port Multiplexer TCB bit position
RSTCTRL_PORF,RSTCTRL,0			'  Power on Reset flag bit position
RSTCTRL_BORF,RSTCTRL,1			'  Brown out detector Reset flag bit position
RSTCTRL_EXTRF,RSTCTRL,2			'  External Reset flag bit position
RSTCTRL_WDRF,RSTCTRL,3			'  Watch dog Reset flag bit position
RSTCTRL_SWRF,RSTCTRL,4			'  Software Reset flag bit position
RSTCTRL_UPDIRF,RSTCTRL,5			'  UPDI Reset flag bit position
RSTCTRL_SWRE,RSTCTRL,0			'  Software reset enable bit position
RTC_RTCEN,RTC,0			'  Enable bit position
RTC_RUNSTDBY,RTC,7			'  Run In Standby bit position
RTC_CTRLABUSY,RTC,0			'  CTRLA Synchronization Busy Flag bit position
RTC_CNTBUSY,RTC,1			'  Count Synchronization Busy Flag bit position
RTC_PERBUSY,RTC,2			'  Period Synchronization Busy Flag bit position
RTC_CMPBUSY,RTC,3			'  Comparator Synchronization Busy Flag bit position
RTC_OVF,RTC,0			'  Overflow Interrupt enable bit position
RTC_CMP,RTC,1			'  Compare Match Interrupt enable bit position
RTC_DBGRUN,RTC,0			'  Run in debug bit position
RTC_PITEN,RTC,0			'  Enable bit position
RTC_CTRLBUSY,RTC,0			'  CTRLA Synchronization Busy Flag bit position
RTC_PI,RTC,0			'  Periodic Interrupt bit position
SLPCTRL_SEN,SLPCTRL,0			'  Sleep enable bit position
SPI_ENABLE,SPI,0			'  Enable Module bit position
SPI_CLK2X,SPI,4			'  Enable Double Speed bit position
SPI_MASTER,SPI,5			'  Host Operation Enable bit position
SPI_DORD,SPI,6			'  Data Order Setting bit position
SPI_SSD,SPI,2			'  Client Select Disable bit position
SPI_BUFWR,SPI,6			'  Buffer Write Mode bit position
SPI_BUFEN,SPI,7			'  Buffer Mode Enable bit position
SPI_IE,SPI,0			'  Interrupt Enable bit position
SPI_SSIE,SPI,4			'  Client Select Trigger Interrupt Enable bit position
SPI_DREIE,SPI,5			'  Data Register Empty Interrupt Enable bit position
SPI_TXCIE,SPI,6			'  Transfer Complete Interrupt Enable bit position
SPI_RXCIE,SPI,7			'  Receive Complete Interrupt Enable bit position
SPI_BUFOVF,SPI,0			'  Buffer Overflow bit position
SPI_SSIF,SPI,4			'  Client Select Trigger Interrupt Flag bit position
SPI_DREIF,SPI,5			'  Data Register Empty Interrupt Flag bit position
SPI_TXCIF,SPI,6			'  Transfer Complete Interrupt Flag bit position
SPI_WRCOL,SPI,6			'  Write Collision bit position
SPI_RXCIF,SPI,7			'  Receive Complete Interrupt Flag bit position
SPI_IF,SPI,7			'  Interrupt Flag bit position
SYSCFG_ENEXTBRK,SYSCFG,0			'  External break enable bit position
TCA_SINGLE_ENABLE,TCA,0			'  Module Enable bit position
TCA_SINGLE_ALUPD,TCA,3			'  Auto Lock Update bit position
TCA_SINGLE_CMP0EN,TCA,4			'  Compare 0 Enable bit position
TCA_SINGLE_CMP1EN,TCA,5			'  Compare 1 Enable bit position
TCA_SINGLE_CMP2EN,TCA,6			'  Compare 2 Enable bit position
TCA_SINGLE_CMP0OV,TCA,0			'  Compare 0 Waveform Output Value bit position
TCA_SINGLE_CMP1OV,TCA,1			'  Compare 1 Waveform Output Value bit position
TCA_SINGLE_CMP2OV,TCA,2			'  Compare 2 Waveform Output Value bit position
TCA_SINGLE_SPLITM,TCA,0			'  Split Mode Enable bit position
TCA_SINGLE_DIR,TCA,0			'  Direction bit position
TCA_SINGLE_LUPD,TCA,1			'  Lock Update bit position
TCA_SINGLE_PERBV,TCA,0			'  Period Buffer Valid bit position
TCA_SINGLE_CMP0BV,TCA,1			'  Compare 0 Buffer Valid bit position
TCA_SINGLE_CMP1BV,TCA,2			'  Compare 1 Buffer Valid bit position
TCA_SINGLE_CMP2BV,TCA,3			'  Compare 2 Buffer Valid bit position
TCA_SINGLE_CNTEI,TCA,0			'  Count on Event Input bit position
TCA_SINGLE_OVF,TCA,0			'  Overflow Interrupt bit position
TCA_SINGLE_CMP0,TCA,4			'  Compare 0 Interrupt bit position
TCA_SINGLE_CMP1,TCA,5			'  Compare 1 Interrupt bit position
TCA_SINGLE_CMP2,TCA,6			'  Compare 2 Interrupt bit position
TCA_SINGLE_DBGRUN,TCA,0			'  Debug Run bit position
TCA_SPLIT_ENABLE,for CTRLA already defined,0			'  Module Enable bit position
TCA_SPLIT_LCMP0EN,TCA,0			'  Low Compare 0 Enable bit position
TCA_SPLIT_LCMP1EN,TCA,1			'  Low Compare 1 Enable bit position
TCA_SPLIT_LCMP2EN,TCA,2			'  Low Compare 2 Enable bit position
TCA_SPLIT_HCMP0EN,TCA,4			'  High Compare 0 Enable bit position
TCA_SPLIT_HCMP1EN,TCA,5			'  High Compare 1 Enable bit position
TCA_SPLIT_HCMP2EN,TCA,6			'  High Compare 2 Enable bit position
TCA_SPLIT_LCMP0OV,TCA,0			'  Low Compare 0 Output Value bit position
TCA_SPLIT_LCMP1OV,TCA,1			'  Low Compare 1 Output Value bit position
TCA_SPLIT_LCMP2OV,TCA,2			'  Low Compare 2 Output Value bit position
TCA_SPLIT_HCMP0OV,TCA,4			'  High Compare 0 Output Value bit position
TCA_SPLIT_HCMP1OV,TCA,5			'  High Compare 1 Output Value bit position
TCA_SPLIT_HCMP2OV,TCA,6			'  High Compare 2 Output Value bit position
TCA_SPLIT_SPLITM,TCA,0			'  Split Mode Enable bit position
TCA_SPLIT_LUNF,TCA,0			'  Low Underflow Interrupt Enable bit position
TCA_SPLIT_HUNF,TCA,1			'  High Underflow Interrupt Enable bit position
TCA_SPLIT_LCMP0,TCA,4			'  Low Compare 0 Interrupt Enable bit position
TCA_SPLIT_LCMP1,TCA,5			'  Low Compare 1 Interrupt Enable bit position
TCA_SPLIT_LCMP2,TCA,6			'  Low Compare 2 Interrupt Enable bit position
TCA_SPLIT_DBGRUN,TCA,0			'  Debug Run bit position
TCB_ENABLE,TCB,0			'  Enable bit position
TCB_SYNCUPD,TCB,4			'  Synchronize Update bit position
TCB_RUNSTDBY,TCB,6			'  Run Standby bit position
TCB_CCMPEN,TCB,4			'  Pin Output Enable bit position
TCB_CCMPINIT,TCB,5			'  Pin Initial State bit position
TCB_ASYNC,TCB,6			'  Asynchronous Enable bit position
TCB_CAPTEI,TCB,0			'  Event Input Enable bit position
TCB_EDGE,TCB,4			'  Event Edge bit position
TCB_FILTER,TCB,6			'  Input Capture Noise Cancellation Filter bit position
TCB_CAPT,TCB,0			'  Capture or Timeout bit position
TCB_RUN,TCB,0			'  Run bit position
TCB_DBGRUN,TCB,0			'  Debug Run bit position
TCD_ENABLE,TCD,0			'  Enable bit position
TCD_CMPOVR,TCD,0			'  Compare output value override bit position
TCD_AUPDATE,TCD,1			'  Auto update bit position
TCD_FIFTY,TCD,3			'  Fifty percent waveform bit position
TCD_CMPCSEL,TCD,6			'  Compare C output select bit position
TCD_CMPDSEL,TCD,7			'  Compare D output select bit position
TCD_SYNCEOC,TCD,0			'  synchronize end of cycle strobe bit position
TCD_SYNC,TCD,1			'  synchronize strobe bit position
TCD_RESTART,TCD,2			'  Restart strobe bit position
TCD_SCAPTUREA,TCD,3			'  Software Capture A Strobe bit position
TCD_SCAPTUREB,TCD,4			'  Software Capture B Strobe bit position
TCD_DISEOC,TCD,7			'  Disable at end of cycle bit position
TCD_TRIGEI,TCD,0			'  Trigger event enable bit position
TCD_ACTION,TCD,2			'  event action bit position
TCD_EDGE,TCD,4			'  edge select bit position
TCD_OVF,TCD,0			'  Overflow interrupt enable bit position
TCD_TRIGA,TCD,2			'  Trigger A interrupt enable bit position
TCD_TRIGB,TCD,3			'  Trigger B interrupt enable bit position
TCD_ENRDY,TCD,0			'  Enable ready bit position
TCD_CMDRDY,TCD,1			'  Command ready bit position
TCD_PWMACTA,TCD,6			'  PWM activity on A bit position
TCD_PWMACTB,TCD,7			'  PWM activity on B bit position
TCD_CMPA,TCD,0			'  Compare A value bit position
TCD_CMPB,TCD,1			'  Compare B value bit position
TCD_CMPC,TCD,2			'  Compare C value bit position
TCD_CMPD,TCD,3			'  Compare D vaule bit position
TCD_CMPAEN,TCD,4			'  Compare A enable bit position
TCD_CMPBEN,TCD,5			'  Compare B enable bit position
TCD_CMPCEN,TCD,6			'  Compare C enable bit position
TCD_CMPDEN,TCD,7			'  Compare D enable bit position
TCD_DBGRUN,TCD,0			'  Debug run bit position
TCD_FAULTDET,TCD,2			'  Fault detection bit position
TWI_FMPEN,TWI,1			'  FM Plus Enable bit position
TWI_SDASETUP,TWI,4			'  SDA Setup Time bit position
TWI_DBGRUN,TWI,0			'  Debug Run bit position
TWI_ENABLE,TWI,0			'  Enable TWI Host bit position
TWI_SMEN,TWI,1			'  Smart Mode Enable bit position
TWI_QCEN,TWI,4			'  Quick Command Enable bit position
TWI_WIEN,TWI,6			'  Write Interrupt Enable bit position
TWI_RIEN,TWI,7			'  Read Interrupt Enable bit position
TWI_ACKACT,TWI,2			'  Acknowledge Action bit position
TWI_FLUSH,TWI,3			'  Flush bit position
TWI_BUSERR,TWI,2			'  Bus Error bit position
TWI_ARBLOST,TWI,3			'  Arbitration Lost bit position
TWI_RXACK,TWI,4			'  Received Acknowledge bit position
TWI_CLKHOLD,TWI,5			'  Clock Hold bit position
TWI_WIF,TWI,6			'  Write Interrupt Flag bit position
TWI_RIF,TWI,7			'  Read Interrupt Flag bit position
TWI_PMEN,TWI,2			'  Promiscuous Mode Enable bit position
TWI_PIEN,TWI,5			'  Stop Interrupt Enable bit position
TWI_APIEN,TWI,6			'  Address/Stop Interrupt Enable bit position
TWI_DIEN,TWI,7			'  Data Interrupt Enable bit position
TWI_AP,TWI,0			'  Client Address or Stop bit position
TWI_DIR,TWI,1			'  Read/Write Direction bit position
TWI_COLL,TWI,3			'  Collision bit position
TWI_APIF,TWI,6			'  Address/Stop Interrupt Flag bit position
TWI_DIF,TWI,7			'  Data Interrupt Flag bit position
TWI_ADDREN,TWI,0			'  Address Enable bit position
USART_DATA8,USART,0			'  Receiver Data Register bit position
USART_PERR,USART,1			'  Parity Error bit position
USART_FERR,USART,2			'  Frame Error bit position
USART_BUFOVF,USART,6			'  Buffer Overflow bit position
USART_RXCIF,USART,7			'  Receive Complete Interrupt Flag bit position
USART_WFB,USART,0			'  Wait For Break bit position
USART_BDF,USART,1			'  Break Detected Flag bit position
USART_ISFIF,USART,3			'  Inconsistent Sync Field Interrupt Flag bit position
USART_RXSIF,USART,4			'  Receive Start Interrupt bit position
USART_DREIF,USART,5			'  Data Register Empty Flag bit position
USART_TXCIF,USART,6			'  Transmit Interrupt Flag bit position
USART_ABEIE,USART,2			'  Auto-baud Error Interrupt Enable bit position
USART_LBME,USART,3			'  Loop-back Mode Enable bit position
USART_RXSIE,USART,4			'  Receiver Start Frame Interrupt Enable bit position
USART_DREIE,USART,5			'  Data Register Empty Interrupt Enable bit position
USART_TXCIE,USART,6			'  Transmit Complete Interrupt Enable bit position
USART_RXCIE,USART,7			'  Receive Complete Interrupt Enable bit position
USART_MPCM,USART,0			'  Multi-processor Communication Mode bit position
USART_ODME,USART,3			'  Open Drain Mode Enable bit position
USART_SFDEN,USART,4			'  Start Frame Detection Enable bit position
USART_TXEN,USART,6			'  Transmitter Enable bit position
USART_RXEN,USART,7			'  Reciever enable bit position
USART_UCPHA,USART,1			'  SPI Host Mode, Clock Phase bit position
USART_UDORD,USART,2			'  SPI Host Mode, Data Order bit position
USART_SBMODE,USART,3			'  Stop Bit Mode bit position
USART_DBGRUN,USART,0			'  Debug Run bit position
USART_IREI,USART,0			'  IrDA Event Input Enable bit position
VREF_DAC0REFEN,VREF,0			'  DAC0/AC0 reference enable bit position
VREF_ADC0REFEN,VREF,1			'  ADC0 reference enable bit position
WDT_SYNCBUSY,WDT,0			'  Syncronization busy bit position
WDT_LOCK,WDT,7			'  Lock enable bit position

[FreeRAM]
'This is the extent of the RAM.  Inclusive of start and end address
3E00:4000

[ConfigOps]
NoConfig-PRG

[Config]
NoConfig-PRG
