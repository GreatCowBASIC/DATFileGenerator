'GCBASIC/GCGB Chip Data File
'Chip: 16F570
'Main Format last revised:   14/07/2017
'Header Format last revised: 22/05/2021

[ChipData]
';All items in the ChipData section are available to user programs as constants
';The constants have the prefix of Chip: See the examples below

'This constant is exposed as ChipWORDS
Prog=2048

'This constant is exposed as ChipEEPROM
EEPROM=132

'This constant is exposed as ChipRAM
RAM=64

'This constant is exposed as ChipIO
I/O=24

'This constant is exposed as ChipADC
ADC=8

'This constant is exposed as ChipMhz
MaxMHz=20

'This constant is exposed with only the first parameter (if more than one)
IntOsc=8

'This constant is exposed as ChipPins
Pins=28

'This constant is exposed as ChipFamily
Family=12

'This constant is exposed as ChipFamilyVariant
FamilyVariant=1

'This constant is exposed as ChipSubFamily
SubFamily=12000

'This constant is exposed as ChipConfWords
ConfigWords=1

'This constant is exposed as ChipPSP
PSP=0

'This constant is exposed as ChipUSART
USART=0

'This constant is exposed as ChipMaxAddress
MaxAddress=255

';Microcontroller specific configuration Constants used in specific libraries, compiler or user programs
';This section of constants is specific to a microcontroller, so the constants may not be present for all microcontrollers

'ChipStacks constant can be used in user programs and provides the available stack depth
Stacks=4

'ChipSelfWrite constant is used within the compiler to indicate the chip is self write capable
SelfWrite=0

[Interrupts]
'For specific details of the interrupts see the microcontroller datasheet
'The first parameter is the Great Cow BASIC identifier used in user code to expose the specific interrupt
ADCReady:ADIE,ADIF
PORTBChange:RBIE,RBIF
PortChange:RBIE,RBIF
Timer0Overflow:T0IE,T0IF

[Registers]
'For specific details of the registers see the microcontroller datasheet
'The first parameter is the Great Cow BASIC register name used in user code to expose the specific register
INDF,0
TMR0,1
PCL,2
STATUS,3
FSR,4
OSCCAL,5
PORTA,6
PORTB,7
PORTC,8
ADCON0,9
ADRES,10
INTCON,11
INTCON0,11
EECON,33
EEDATA,37
EEADR,38
CM1CON0,39
CM2CON0,40
VRCON,41
ANSEL,42
IW,97
INTCON1,101
INTIE_REG,101
ISTATUS,102
IFSR,103
IBSR,104
OPACON,105

[Bits]
'For details of the bits (relative to a register in terms of registerbits) see the microcontroller datasheet
'The first parameter is the Great Cow BASIC bit name used in user code to expose the specific registerbit
NOT_C1WU,CM1CON0,0
C1PREF,CM1CON0,1
C1NREF,CM1CON0,2
C1ON,CM1CON0,3
NOT_C1T0CS,CM1CON0,4
C1POL,CM1CON0,5
NOT_C1OUTEN,CM1CON0,6
C1OUT,CM1CON0,7
C,STATUS,0
DC,STATUS,1
Z,STATUS,2
NOT_PD,STATUS,3
NOT_TO,STATUS,4
PA0,STATUS,5
PA1,STATUS,6
PA2,STATUS,7
CAL0,OSCCAL,1
CAL1,OSCCAL,2
CAL2,OSCCAL,3
CAL3,OSCCAL,4
CAL4,OSCCAL,5
CAL5,OSCCAL,6
CAL6,OSCCAL,7
RA0,PORTA,0
RA1,PORTA,1
RA2,PORTA,2
RA3,PORTA,3
RA4,PORTA,4
RA5,PORTA,5
RA6,PORTA,6
RA7,PORTA,7
RB0,PORTB,0
RB1,PORTB,1
RB2,PORTB,2
RB3,PORTB,3
RB4,PORTB,4
RB5,PORTB,5
RB6,PORTB,6
RB7,PORTB,7
RC0,PORTC,0
RC1,PORTC,1
RC2,PORTC,2
RC3,PORTC,3
RC4,PORTC,4
RC5,PORTC,5
RC6,PORTC,6
RC7,PORTC,7
ADON,ADCON0,0
GO_DONE,ADCON0,1
GO_NOT_DONE,ADCON0,1
GO,ADCON0,1
CHS0,ADCON0,2
CHS1,ADCON0,3
CHS2,ADCON0,4
CHS3,ADCON0,5
ADCS0,ADCON0,6
ADCS1,ADCON0,7
NOT_DONE,ADCON0,1
ADRES0,ADRES,0
ADRES1,ADRES,1
ADRES2,ADRES,2
ADRES3,ADRES,3
ADRES4,ADRES,4
ADRES5,ADRES,5
ADRES6,ADRES,6
ADRES7,ADRES,7
GIE,INTCON,0
RBIF,INTCON,4
T0IF,INTCON,5
CWIF,INTCON,6
ADIF,INTCON,7
INTCON0_GIE,INTCON0,0
INTCON0_RBIF,INTCON0,4
INTCON0_T0IF,INTCON0,5
INTCON0_CWIF,INTCON0,6
INTCON0_ADIF,INTCON0,7
RD,EECON,0
WR,EECON,1
WREN,EECON,2
WRERR,EECON,3
FREE,EECON,4
NOT_C2WU,CM2CON0,0
C2PREF1,CM2CON0,1
C2NREF,CM2CON0,2
C2ON,CM2CON0,3
C2PREF2,CM2CON0,4
C2POL,CM2CON0,5
NOT_C2OUTEN,CM2CON0,6
C2OUT,CM2CON0,7
VRR,VRCON,4
VROE2,VRCON,5
VROE1,VRCON,6
VREN,VRCON,7
VR0,VRCON,0
VR1,VRCON,1
VR2,VRCON,2
VR3,VRCON,3
ANS0,ANSEL,0
ANS1,ANSEL,1
ANS2,ANSEL,2
ANS3,ANSEL,3
ANS4,ANSEL,4
ANS5,ANSEL,5
ANS6,ANSEL,6
ANS7,ANSEL,7
WUR,INTCON1,0
RBIE,INTCON1,4
T0IE,INTCON1,5
CWIE,INTCON1,6
ADIE,INTCON1,7
INTIE_REG_WUR,INTIE_REG,0
INTIE_REG_RBIE,INTIE_REG,4
INTIE_REG_T0IE,INTIE_REG,5
INTIE_REG_CWIE,INTIE_REG,6
INTIE_REG_ADIE,INTIE_REG,7
ISTATUS_C,ISTATUS,0
ISTATUS_DC,ISTATUS,1
ISTATUS_Z,ISTATUS,2
ISTATUS_NOT_PD,ISTATUS,3
ISTATUS_NOT_TO,ISTATUS,4
ISTATUS_PA0,ISTATUS,5
ISTATUS_PA1,ISTATUS,6
ISTATUS_PA2,ISTATUS,7
OPA1ON,OPACON,0
OPA2ON,OPACON,1
PSA,OPTION_REG,3
T0SE,OPTION_REG,4
T0CS,OPTION_REG,5
NOT_RBPU,OPTION_REG,6
NOT_RBWU,OPTION_REG,7
PS0,OPTION_REG,0
PS1,OPTION_REG,1
PS2,OPTION_REG,2
TRISC0,TRISC,0
TRISC1,TRISC,1
TRISC2,TRISC,2
TRISC3,TRISC,3
TRISC4,TRISC,4
TRISC5,TRISC,5
TRISC6,TRISC,6
TRISC7,TRISC,7
TRISB0,TRISB,0
TRISB1,TRISB,1
TRISB2,TRISB,2
TRISB3,TRISB,3
TRISB4,TRISB,4
TRISB5,TRISB,5
TRISB6,TRISB,6
TRISB7,TRISB,7
TRISA0,TRISA,0
TRISA1,TRISA,1
TRISA2,TRISA,2
TRISA3,TRISA,3
TRISA4,TRISA,4
TRISA5,TRISA,5
TRISA6,TRISA,6
TRISA7,TRISA,7

[FreeRAM]
20:5F

[NoBankRAM]
'NoBankRAM is somewhat misnamed - it is used for the defintion of (any) access bank locations
'If a memory location is defined in both NoBankRAM and FreeRAM, then the compiler knows that it is access bank RAM.
'If an SFR location is in one of the NoBankRAM ranges, then the compiler knows not to do any bank selection when accessing that register.

'The NoBankRAM section must include two ranges, one for access bank RAM, one for access bank SFRs, or there will be issues.
'The first range MUST be the ACCESS RAM range
'The first range is the FAST SFR range

'If there are no ranges defined in NoBankRAM, the compiler will try to guess them.
'On 18Fs, it will guess based on where the lowest SFR is, and from what the total RAM on the chip is. If there's only one range defined
'in the NoBankRAM locations, the compiler will assume that is the range for the RAM, and then will guess where the range for the access bank SFRs is.
20:5F

[Pins-DIP]
2,RA0(IO)
3,RA1(IO)
4,RA2(IO)
5,RA3(IO)
6,RA4(IO)
7,RA5(IO)
10,RA6(IO),OSC2
9,RA7(IO),OSC1
21,RB0(IO)
22,RB1(IO)
23,RB2(IO)
24,RB3(IO)
25,RB4(IO)
26,RB5(IO)
27,RB6(IO)
28,RB7(IO)
11,RC0(IO)
12,RC1(IO)
13,RC2(IO)
14,RC3(IO)
15,RC4(IO)
16,RC5(IO)
17,RC6(IO)
18,RC7(IO)
1,MCLR
8,Vss
19,Vss
20,Vdd

[ConfigOps]
'For details of the config options see the microcontroller datasheet
'The first parameter is the configuration field that can be used to expose specific configuration bits
'The other parameters are the configuration field options that can be set
OSC=LP,XT,HS,EC,INTRC_IO,INTRC_CLKOUT,EXTRC_IO,EXTRC_CLKOUT,IOSCFS_4MHZ,IOSCFS_8MHZ
WDTE=OFF,ON
CP=ON,OFF
CPSW=ON,OFF
BOREN=OFF,ON
DRTEN=OFF,ON

[Config]
'For details of the config addresses see the microcontroller datasheet
FOSC_LP,1,4088
FOSC_XT,1,4089
FOSC_HS,1,4090
FOSC_EC,1,4091
FOSC_INTRC_IO,1,4092
FOSC_INTRC_CLKOUT,1,4093
FOSC_EXTRC_IO,1,4094
FOSC_EXTRC_CLKOUT,1,4095
WDTE_OFF,1,4087
WDTE_ON,1,4095
CP_ON,1,4079
CP_OFF,1,4095
IOSCFS_4MHz,1,4031
IOSCFS_8MHz,1,4095
CPSW_ON,1,3967
CPSW_OFF,1,4095
BOREN_OFF,1,3839
BOREN_ON,1,4095
DRTEN_OFF,1,3583
DRTEN_ON,1,4095
IDLOC0,1,2112
IDLOC1,1,2113
IDLOC2,1,2114
IDLOC3,1,2115

